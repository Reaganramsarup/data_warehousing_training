
CREATE OR REPLACE PROCEDURE DATA_WAREHOUSE.PUBLIC.LOAD_DIM_CUSTOMER()
RETURNS VARCHAR NOT NULL
LANGUAGE SQL
AS

BEGIN

--First take care of the new records that we are seeing for the first time
MERGE INTO DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER 
USING (
SELECT
CUSTOMER_ID,
FIRST_NAME,
LAST_NAME,
FULL_NAME,
GENDER,
BIRTHDAY_DATE, 
AGE,
E_MAIL,
PHONE_NUMBER
FROM DATA_WAREHOUSE.PUBLIC.VIRTUAL_DIM_CUSTOMER 
) AS b ON DIM_CUSTOMER.CUSTOMER_ID = b.CUSTOMER_ID
  WHEN NOT MATCHED THEN 
  INSERT 
  (CUSTOMER_SK,
   CUSTOMER_ID,
   FIRST_NAME,
   LAST_NAME,
   FULL_NAME,
   GENDER,
   BIRTHDAY_DATE, 
   AGE,
   E_MAIL,
   PHONE_NUMBER,
   ACTIVE_FLAG_IND,
   EFFECTIVE_START_DATE,
   EFFECTIVE_END_DATE) 
   VALUES 
   (SEQ_CUSTOMER_SK.nextval, 
    b.CUSTOMER_ID, 
    b.FIRST_NAME,
    b.LAST_NAME,
    b.FULL_NAME,
    b.GENDER,
    b.BIRTHDAY_DATE, 
    b.AGE,
    b.E_MAIL,
    b.PHONE_NUMBER,
    'Y',
    '1900-01-01',
    '9999-12-31');

-- Now lets handle the updates, because we are treating this as a type 2, we want to ensure we can flag changed records. The code below will allow us to
MERGE INTO DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER 
USING (SELECT
p.CUSTOMER_SK,
v.CUSTOMER_ID,
v.FIRST_NAME,
v.LAST_NAME,
v.FULL_NAME,
v.GENDER,
v.BIRTHDAY_DATE, 
v.AGE,
v.E_MAIL,
v.PHONE_NUMBER,
p.ACTIVE_FLAG_IND,
p.EFFECTIVE_START_DATE,
p.EFFECTIVE_END_DATE
FROM DATA_WAREHOUSE.PUBLIC.VIRTUAL_DIM_CUSTOMER v
JOIN DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER p
ON p.CUSTOMER_ID = v.CUSTOMER_ID
AND p.ACTIVE_FLAG_IND = 'Y'
AND (
        COALESCE(v.FIRST_NAME, '-1') != COALESCE(p.FIRST_NAME, '-1') OR
        COALESCE(v.LAST_NAME, '-1') != COALESCE(p.LAST_NAME, '-1') OR
        COALESCE(v.FULL_NAME, '-1') != COALESCE(p.FULL_NAME, '-1') OR
        COALESCE(v.GENDER, '-1') != COALESCE(p.GENDER, '-1') OR
        COALESCE(v.BIRTHDAY_DATE, '1900-01-01') != COALESCE(p.BIRTHDAY_DATE, '1900-01-01') OR 
        COALESCE(v.AGE, '0') != COALESCE(p.AGE, '0') OR
        COALESCE(v.E_MAIL, '-1') != COALESCE(p.E_MAIL, '-1') OR
        COALESCE(v.PHONE_NUMBER, '-1') != COALESCE(p.PHONE_NUMBER, '-1')
    )
) c
ON 
        COALESCE(DIM_CUSTOMER.FIRST_NAME, '-1') = COALESCE(c.FIRST_NAME, '-1') AND
        COALESCE(DIM_CUSTOMER.LAST_NAME, '-1') = COALESCE(c.LAST_NAME, '-1') AND
        COALESCE(DIM_CUSTOMER.FULL_NAME, '-1') = COALESCE(c.FULL_NAME, '-1') AND
        COALESCE(DIM_CUSTOMER.GENDER, '-1') = COALESCE(c.GENDER, '-1') AND
        COALESCE(DIM_CUSTOMER.BIRTHDAY_DATE, '1900-01-01') = COALESCE(c.BIRTHDAY_DATE, '1900-01-01') AND 
        COALESCE(DIM_CUSTOMER.AGE, '0') = COALESCE(c.AGE, '0') AND
        COALESCE(DIM_CUSTOMER.E_MAIL, '-1') = COALESCE(c.E_MAIL, '-1') AND
        COALESCE(DIM_CUSTOMER.PHONE_NUMBER, '-1') = COALESCE(c.PHONE_NUMBER, '-1')
WHEN NOT MATCHED THEN
INSERT
(
   CUSTOMER_SK,
   CUSTOMER_ID,
   FIRST_NAME,
   LAST_NAME,
   FULL_NAME,
   GENDER,
   BIRTHDAY_DATE, 
   AGE,
   E_MAIL,
   PHONE_NUMBER,
   ACTIVE_FLAG_IND,
   EFFECTIVE_START_DATE,
   EFFECTIVE_END_DATE
)
VALUES 
(
    SEQ_CUSTOMER_SK.nextval, 
    c.CUSTOMER_ID,
    c.FIRST_NAME,
    c.LAST_NAME,
    c.FULL_NAME,
    c.GENDER,
    c.BIRTHDAY_DATE, 
    c.AGE,
    c.E_MAIL,
    c.PHONE_NUMBER,
    'Y',
    CURRENT_DATE,
    '9999-12-31'
);


--Now lets deactivate the old records
MERGE INTO DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER p
USING DATA_WAREHOUSE.PUBLIC.VIRTUAL_DIM_CUSTOMER v
ON p.CUSTOMER_ID = v.CUSTOMER_ID
AND 
(
        COALESCE(v.FIRST_NAME, '-1') != COALESCE(p.FIRST_NAME, '-1') OR
        COALESCE(v.LAST_NAME, '-1') != COALESCE(p.LAST_NAME, '-1') OR
        COALESCE(v.FULL_NAME, '-1') != COALESCE(p.FULL_NAME, '-1') OR
        COALESCE(v.GENDER, '-1') != COALESCE(p.GENDER, '-1') OR
        COALESCE(v.BIRTHDAY_DATE, '1900-01-01') != COALESCE(p.BIRTHDAY_DATE, '1900-01-01') OR 
        COALESCE(v.AGE, '0') != COALESCE(p.AGE, '0') OR
        COALESCE(v.E_MAIL, '-1') != COALESCE(p.E_MAIL, '-1') OR
        COALESCE(v.PHONE_NUMBER, '-1') != COALESCE(p.PHONE_NUMBER, '-1')
)
AND p.EFFECTIVE_END_DATE = '9999-12-31'
WHEN MATCHED THEN UPDATE
SET p.EFFECTIVE_END_DATE = DATEADD(day, -1, CURRENT_DATE),
p.ACTIVE_FLAG_IND = 'N';


--Handling of the ghost records
INSERT INTO DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER
(
   CUSTOMER_SK,
   CUSTOMER_ID,
   FIRST_NAME,
   LAST_NAME,
   FULL_NAME,
   GENDER,
   BIRTHDAY_DATE, 
   AGE,
   E_MAIL,
   PHONE_NUMBER,
   ACTIVE_FLAG_IND,
   EFFECTIVE_START_DATE,
   EFFECTIVE_END_DATE
)

select
    -1             AS CUSTOMER_SK,
    '-1'           AS CUSTOMER_ID,
    'UNASSIGNED'   AS FIRST_NAME,
    'UNASSIGNED'   AS LAST_NAME,
    'UNASSIGNED'   AS FULL_NAME,
    'UNASSIGNED'   AS GENDER,
    '1900-01-01'   AS BIRTHDAY_DATE, 
    0              AS AGE,
    'UNASSIGNED'   AS E_MAIL,
    'UNASSIGNED'   AS PHONE_NUMBER,
    'Y'            AS ACTIVE_FLAG_IND,
    '1900-01-01'   AS EFFECTIVE_START_DATE,
    '9999-12-31'   AS EFFECTIVE_END_DATE
WHERE NOT EXISTS 
(
      SELECT 1 FROM DATA_WAREHOUSE.PUBLIC.DIM_CUSTOMER
      WHERE customer_sk = -1
);

RETURN 'Load is complete';

END;

